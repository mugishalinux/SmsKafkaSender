
server.port = ${random.int[2048,8096]}
spring.kafka.consumer.bootstrap-servers =144.126.157.125:9093
spring.kafka.consumer.group-id= mygroup_sms
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.main.allow-circular-references=true
#
#spring.cache.type=redis
#spring.redis.host=localhost
#spring.redis.port=6379
#spring.cache.redis.cache-null-values=true


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/smsdb
spring.datasource.username=postgres
spring.datasource.password=mugisha
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER


